# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'fileutils'
require 'open-uri'

$num_instances = 3
$instance_name_prefix = "c"
$consul_package = "https://releases.hashicorp.com/consul/0.7.0/consul_0.7.0_linux_amd64.zip"
$consul_zip = File.join([File.dirname(__FILE__), 'files', 'consul.zip'])

['vagrant-alpine'].each do |plugin|
  unless Vagrant.has_plugin?(plugin)
    raise "Plugin %s is not installed.\nInstall using 'vagrant plugin install %s'" % [plugin, plugin]
  end
end

if ARGV[0] == "up"
	if not File.exists?($consul_zip)
		puts "Downloading %s" % $consul_package
		open($consul_zip, 'wb') do |file|
	  		file << open($consul_package).read
		end
	end
end

Vagrant.configure("2") do |config|
  config.vm.box = "maier/alpine-3.4-x86_64"

  config.vm.provider :virtualbox do |v|
    v.check_guest_additions = false
    v.functional_vboxsf     = false
  end

  (0..$num_instances-1).each do |i|
    config.vm.define vm_name = "%s%d" % [$instance_name_prefix, i] do |config|
      config.vm.hostname = vm_name
      ip = "192.168.33.#{i+60}"
      config.vm.network :private_network, ip: ip
      config.vm.synced_folder ".", "/vagrant", disabled: true
      config.vm.provision "file", source: $consul_zip, destination: "~/consul.zip"
      config.vm.provision "file", source: File.join([File.dirname(__FILE__), 'files', 'consul_setup.sh']), destination: "~/consul_setup.sh"
      config.vm.provision "shell", inline: "/home/vagrant/consul_setup.sh"
      if i == 0
      	config.vm.provision :shell, :inline => "/usr/local/bin/consul agent -server -data-dir /opt/consul -bind %s -bootstrap-expect=2 -client %s -pid-file /run/consul/agent.pid -syslog &> consul.log &" % [ ip, ip ]
      else
      	config.vm.provision :shell, :inline => "/usr/local/bin/consul agent -server -data-dir /opt/consul -bind %s -retry-join 192.168.33.60 -client %s -pid-file /run/consul/agent.pid -syslog &> consul.log &" % [ip, ip]
      end
   end
  end
end
